%% Ej 5 P2  -  AnSyS - IPS
% Limpiamos la ventana de comandos, borramos todas las variables, cerramos
% todas las figuras.
clear all;close all;clc;
% A�adimos directorio con definiciones de funciones �tiles
addpath('Sctipts TP1 TP2/funciones')

%% a)
% S1
% y[n] = x[n] + a*x[n-1]
N = 50; a = 1/2;
n = -5:N;
x = 5.*(n==0);
% x = 0.5*cos(2*pi*1/5*n);
% x = (-1).^n;
% x = 1.*(n==0);
y = zeros(1,length(n));

% Implementaci�n de S1
for ii = 1:length(n)
    if ii == 1
        y(ii) = x(ii); % ya que suponemos que x(ii-1) = 0 !
    else
        y(ii) = x(ii) + a*x(ii - 1);
    end
end

stemCompleto(n,x,...
    'Maximize',1,...
    'Subplot',[2 1 1],...
    'AxisLimits',[-3 N -10 10],...
    'XLabel','$n$',...
    'YLabel','$x[n]$',...
    'Title','Entrada de $S_1$',...
    'FontSize',20,...
    'Color','b',...
    'LineWidth',2);

stemCompleto(n,y,...
    'Hold',1,...
    'Subplot',[2 1 2],...
    'AxisLimits',[-3 N -5 20],...
    'XLabel','$n$',...
    'YLabel','$y[n]$',...
    'Title',['Salida de $S_3 \rightarrow y[n] = x[n] + ax[n-1]\ ,\  a = $' num2str(a)],...
    'FontSize',20,...
    'Color','m',...
    'LineWidth',2);

%%
% S2
% y[n] = x[n] * a*x[n-1]
N = 50; a = 1.5;
n = -5:N;
% x = 1.*(n>=0);
x = 0.5*cos(2*pi*1/8*n);
% x = (-1).^n;
y = zeros(1,length(n));

% Implementaci�n de S2
for ii = 1:length(n)
    if ii == 1
        y(ii) = x(ii); % ya que suponemos que x(ii-1) = 0 !
    else
        y(ii) = x(ii)*a*x(ii - 1);
    end
end

stemCompleto(n,x,...
    'Maximize',1,...
    'Subplot',[2 1 1],...
    'AxisLimits',[-3 N -2 2],...
    'XLabel','$n$',...
    'YLabel','$x[n]$',...
    'Title','Entrada de $S_2$',...
    'FontSize',20,...
    'Color','b',...
    'LineWidth',2);

stemCompleto(n,y,...
    'Hold',1,...
    'Subplot',[2 1 2],...
    'AxisLimits',[-3 N -2 max(y)+0.5],...
    'XLabel','$n$',...
    'YLabel','$y[n]$',...
    'Title',['Salida de $S_3 \rightarrow y[n] = a x[n] x[n-1]\ ,\  a = $' num2str(a)],...
    'FontSize',20,...
    'Color','m',...
    'LineWidth',2);

%%
% S3
% y[n] = x[n] + b*y[n-1]
N = 50; b = 0.5;
n = -5:N;
x = 1.*(n>=0);
% x = 0.5*cos(2*pi*1/5*n);
% x = (-1).^n;
y = zeros(1,length(n));

% Implementaci�n de S3
for ii = 1:length(n)
    if ii == 1
        y(ii) = x(ii); % ya que suponemos que x(ii-1) = 0 !
    else
        y(ii) = x(ii) + b*y(ii - 1);
    end
end

stemCompleto(n,x,...
    'Maximize',1,...
    'Subplot',[2 1 1],...
    'AxisLimits',[-3 N -2 max(x)+0.5],...
    'XLabel','$n$',...
    'YLabel','$x[n]$',...
    'Title','Entrada de $S_3$',...
    'FontSize',20,...
    'Color','b',...
    'LineWidth',2);

stemCompleto(n,y,...
    'Hold',1,...
    'Subplot',[2 1 2],...
    'AxisLimits',[-3 N -2 max(y)+0.5],...
    'XLabel','$n$',...
    'YLabel','$y[n]$',...
    'Title',['Salida de $S_3 \rightarrow y[n] = x[n] + by[n-1]\ ,\  b = $' num2str(b)],...
    'FontSize',20,...
    'Color','m',...
    'LineWidth',2);

%%
% S4
% y[n] = sum_{k = n-n0}^{n+n0} x[k]
N = 30; n0 = 5;
n = -15:N;
x = 1.*(n>=0);
% x = 0.5*cos(2*pi*1/20*n);
% x = (-1).^n;
y = zeros(1,length(n));
for ii = 1:length(n)

    if ii < n0
        y(ii) = cumsum(x(ii)) + sum(x(ii:ii+n0));
    else
        if (ii+n0) <= length(n)
            y(ii) = sum(x(ii+1-n0:ii+n0));
        else
            y(ii) = 0; % la salida es nula si no alcanzan las muestras para la ventana.
        end
    end

end

stemCompleto(n,x,...
    'Maximize',1,...
    'Subplot',[2 1 1],...
    'AxisLimits',[n(1) N-n0 -2 max(x)+0.5],...
    'XLabel','$n$',...
    'YLabel','$x[n]$',...
    'Title','Entrada de $S_4$',...
    'FontSize',20,...
    'Color','b',...
    'LineWidth',2);

stemCompleto(n,y,...
    'Hold',1,...
    'Subplot',[2 1 2],...
    'AxisLimits',[n(1) N-n0 -2 max(y)+2],...
    'XLabel','$n$',...
    'YLabel','$y[n]$',...
    'Title',['Salida de $S_4 \rightarrow y[n] = \sum_{k = n-n0}^{n+n0} x[k]\ ,\  n_0 = $' num2str(n0)],...
    'FontSize',20,...
    'Color','m',...
    'LineWidth',2);

%%
% S5
% y[n] = n*x[n]
N = 30;
n = 0:N-1;
x = 1.*(n>=0);
% x = 0.5*cos(2*pi*1/20*n);
% % x = (-1).^n;
y = zeros(1,N);
for ii = 1:N
    y(ii) = n(ii).*x(ii);
end

stemCompleto(n,x,...
    'Maximize',1,...
    'Subplot',[2 1 1],...
    'AxisLimits',[n(1) n(end) min(x)-2 max(x)+2],...
    'XLabel','$n$',...
    'YLabel','$x[n]$',...
    'Title','Entrada de $S_5$',...
    'FontSize',20,...
    'Color','b',...
    'LineWidth',2);

stemCompleto(n,y,...
    'Hold',1,...
    'Subplot',[2 1 2],...
    'AxisLimits',[n(1) n(end) min(y)-2 max(y)+2],...
    'XLabel','$n$',...
    'YLabel','$y[n]$',...
    'Title',['Salida de $S_5 \rightarrow y[n] = nx[n]$'],...
    'FontSize',20,...
    'Color','m',...
    'LineWidth',2);

%% b)

N = 50; K = 1;
n = -5:N-1;
% x = 1.*(n>=0)+ 0.75*(n==4) + 0.00*randn(1,length(n));
% x = 1.* (n==0);
x = -1.*(n == 0) +  1.*(n == 1) - 1.*(n==2);

for ii = 1:length(n)

    if ii <= K
        % hasta que la ventana "se llene"
        y(ii) = median(x(ii:ii+K));
    else
        if (ii+K) <= length(n)
            % si la ventana abarca puntos de la se�al
            y(ii) = median(x(ii-K:ii+K));
        else
            % si la ventana tiene cada vez menos puntos
            y(ii) = median(x(ii-K:end));
        end
    end

end

stemCompleto(n,x,...
    'Maximize',1,...
    'Subplot',[2 1 1],...
    'AxisLimits',[n(1) N min(x)-0.5 max(x)+0.5],...
    'XLabel','$n$',...
    'YLabel','$x[n]$',...
    'Title','Entrada de $S_5$',...
    'FontSize',20,...
    'Color','b',...
    'LineWidth',2);

stemCompleto(n,y,...
    'Hold',1,...
    'Subplot',[2 1 2],...
    'AxisLimits',[n(1) N min(y)-0.5 max(y)+0.5],...
    'XLabel','$n$',...
    'YLabel','$y[n]$',...
    'Title',['Salida de $S_5 \rightarrow y[n] = mediana\{x[n-K],...,x[n],...,x[n+K]]\}\ ,\ K=$' num2str(K)],...
    'FontSize',20,...
    'Color','m',...
    'LineWidth',2);

